!function(e,t){function a(){t(e.lazySizes),e.removeEventListener("lazyunveilread",a,!0)}t=t.bind(null,e,e.document),"object"==typeof module&&module.exports?t(require("lazysizes")):"function"==typeof define&&define.amd?define(["lazysizes"],t):e.lazySizes?a():e.addEventListener("lazyunveilread",a,!0)}(window,function(e,d,o){"use strict";var u,z,g,c,i,r,s,y,b;e.addEventListener&&(u=o.cfg,z=/\s+/g,g=/\s*\|\s+|\s+\|\s*/g,c=/^(.+?)(?:\s+\[\s*(.+?)\s*\])(?:\s+\[\s*(.+?)\s*\])?$/,i=/^\s*\(*\s*type\s*:\s*(.+?)\s*\)*\s*$/,r=/\(|\)|'/,s={contain:1,cover:1},y=function(e,t){var a;t&&((a=t.match(i))&&a[1]?e.setAttribute("type",a[1]):e.setAttribute("media",u.customMedia[t]||t))},b=function(e){var t,a;e.target._lazybgset&&(a=(t=e.target)._lazybgset,(e=t.currentSrc||t.src)&&((e=o.fire(a,"bgsetproxy",{src:e,useSrc:r.test(e)?JSON.stringify(e):e})).defaultPrevented||(a.style.backgroundImage="url("+e.detail.useSrc+")")),t._lazybgsetLoading&&(o.fire(a,"_lazyloaded",{},!1,!0),delete t._lazybgsetLoading))},addEventListener("lazybeforeunveil",function(e){var t,a,i,r,s,n,l;!e.defaultPrevented&&(s=e.target.getAttribute("data-bgset"))&&(n=e.target,(l=d.createElement("img")).alt="",l._lazybgsetLoading=!0,e.detail.firesLoad=!0,t=s,a=n,e=l,i=d.createElement("picture"),r=a.getAttribute(u.sizesAttr),s=a.getAttribute("data-ratio"),n=a.getAttribute("data-optimumx"),a._lazybgset&&a._lazybgset.parentNode==a&&a.removeChild(a._lazybgset),Object.defineProperty(e,"_lazybgset",{value:a,writable:!0}),Object.defineProperty(a,"_lazybgset",{value:i,writable:!0}),t=t.replace(z," ").split(g),i.style.display="none",e.className=u.lazyClass,1!=t.length||r||(r="auto"),t.forEach(function(e){var t,a=d.createElement("source");r&&"auto"!=r&&a.setAttribute("sizes",r),(t=e.match(c))?(a.setAttribute(u.srcsetAttr,t[1]),y(a,t[2]),y(a,t[3])):a.setAttribute(u.srcsetAttr,e),i.appendChild(a)}),r&&(e.setAttribute(u.sizesAttr,r),a.removeAttribute(u.sizesAttr),a.removeAttribute("sizes")),n&&e.setAttribute("data-optimumx",n),s&&e.setAttribute("data-ratio",s),i.appendChild(e),a.appendChild(i),setTimeout(function(){o.loader.unveil(l),o.rAF(function(){o.fire(l,"_lazyloaded",{},!0,!0),l.complete&&b({target:l})})}))}),d.addEventListener("load",b,!0),e.addEventListener("lazybeforesizes",function(e){var t,a,i;e.detail.instance==o&&e.target._lazybgset&&e.detail.dataAttr&&(a=e.target._lazybgset,i=(getComputedStyle(a)||{getPropertyValue:function(){}}).getPropertyValue("background-size"),!s[i]&&s[a.style.backgroundSize]&&(i=a.style.backgroundSize),s[t=i]&&(e.target._lazysizesParentFit=t,o.rAF(function(){e.target.setAttribute("data-parent-fit",t),e.target._lazysizesParentFit&&delete e.target._lazysizesParentFit})))},!0),d.documentElement.addEventListener("lazybeforesizes",function(e){var t;!e.defaultPrevented&&e.target._lazybgset&&e.detail.instance==o&&(e.detail.width=(t=e.target._lazybgset,e=o.gW(t,t.parentNode),(!t._lazysizesWidth||e>t._lazysizesWidth)&&(t._lazysizesWidth=e),t._lazysizesWidth))}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
