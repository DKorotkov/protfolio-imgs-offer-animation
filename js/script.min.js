!function(){(class{constructor(t){this.constructorOptions=t,this.init()}static init(){this.options=Object.assign({formClassName:"form",errorClassName:"error",inputClassName:"form__input",invalidClassName:"invalid",withValueClassName:"not-empty",errors:{required:"Заполните обязательное поле",email:"Пожалуйста, введите правильный email",type:"Не соответствует формату поля",pattern:"Не соответствует формату поля",tooShort:"Слишком короткое",tooLong:"Слишком динное",stepMismatch:"Неверный шаг (введенный диапозон)",rangeUnderflow:"Меньше диапозона",rangeOverflow:"Больше диапозона",customError:"Ошибка",badInput:"badInput"}},this.constructorOptions),this.forms=document.querySelectorAll("form"),this.forms||console.error("Форма на странице не найдена"),this.forms.forEach(t=>{const e=t.querySelectorAll("input");e.forEach(t=>{const e=document.createElement("span");e.classList.add(this.options.formClassName+"__"+this.options.errorClassName),e.setAttribute("aria-live","polite"),t.insertAdjacentElement("afterend",e),t.addEventListener("blur",t=>{this.validate(t),this.isEmpty(t)})}),t.addEventListener("submit",t=>{this.checkValid(t)})})}static isEmpty(t){0<(t=t.target?t.target:t).value.length?t.classList.add(this.options.inputClassName+"--"+this.options.withValueClassName):t.classList.remove(this.options.inputClassName+"--"+this.options.withValueClassName)}static validate(t){const e=(t=t.target?t.target:t).nextElementSibling;if(!t.validity.valid){if(t.validity.valueMissing)return this.setInvalid(t,this.options.errors.required),e;if(t.validity.typeMismatch)return this.setInvalid(t,this.options.errors.type),e;if(t.validity.patternMismatch)return this.setInvalid(t,this.options.errors.pattern),e;if(t.validity.tooShort)return this.setInvalid(t,this.options.errors.tooShort),e;if(t.validity.tooLong)return this.setInvalid(t,this.options.errors.tooLong),e;if(t.validity.stepMismatch)return this.setInvalid(t,this.options.errors.stepMismatch),e;if(t.validity.rangeUnderflow)return this.setInvalid(t,this.options.errors.rangeUnderflow),e;if(t.validity.rangeOverflow)return this.setInvalid(t,this.options.errors.rangeOverflow),e;if(t.validity.customError)return this.setInvalid(t,this.options.errors.customError),e;if(t.validity.badInput)return this.setInvalid(t,this.options.errors.badInput),e}t.classList.remove(this.options.inputClassName+"--"+this.options.invalidClassName),e.innerHTML=""}static setInvalid(t,e){const i=t.nextElementSibling;t.classList.add(this.options.inputClassName+"--"+this.options.invalidClassName),i.innerHTML=e}static checkValid(t){let e=new Array;const i="object"==typeof t.currentTarget?t.currentTarget:t,s=i.querySelectorAll("input");if("object"==typeof t.currentTarget&&t.preventDefault(),s.forEach(t=>{e.push(this.validate(t))}),e=e.filter(function(t){return void 0!==t}),0===e.length)return i.submit(),!0;e[0].previousSibling.focus()}}).init();class t{_KEYS={ESC:27,SPACE:32,ENTER:13,TAB:9,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40};#focusableElements='a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), select, details, audio, video, object, [contenteditable=""], [contenteditable="true"], [tabindex]:not([tabindex="-1"])';#defaultOptions={focusTrap:!1,collapseOnFocusOut:!1};constructor(t){this._options=Object.assign(this.#defaultOptions,t),this._$el=document.querySelector(this._options.selector),this.#check()?this.#init():this._hasErrors=!0}#check(){return this._$el?!(void 0!==this._options.matchMedia&&!window.matchMedia(this._options.matchMedia).matches):(console.error("Не найден класс - "+this._options.selector),!1)}#init(){this._$el.addEventListener("click",t=>this._mainElClick(t)),this._$el.addEventListener("keydown",t=>this._checkPress(t),!0)}_initFocusableContent(){this._$lastFocusableEl=this._$el.querySelector('[data-select-last="true"]'),this._getFocusableContent(),this._$lastFocusableEl&&(this._$lastFocusableEl.tabIndex=-1),this._$focusableContent=this._$focusableContent.filter(t=>{if(t!==this._$lastFocusableEl)return t})}#focusTrapAndCollapse(t){const e=this._$focusableContent[0],i=this._$focusableContent[this._$focusableContent.length-1],s=this._$lastFocusableEl;t.shiftKey?document.activeElement!==e&&document.activeElement!==s||(s&&document.activeElement!==s&&!this._options.collapseOnFocusOut?s.focus():(this._options.collapseOnFocusOut&&this.close(),i.focus()),t.preventDefault()):document.activeElement!==i&&document.activeElement!==s||(s&&document.activeElement!==s?s.focus():(this._options.collapseOnFocusOut&&this.close(),e.focus()),t.preventDefault())}_checkPress(t){t.keyCode===this._KEYS.ESC&&this.close(),"Tab"!==t.key&&t.keyCode!==this._KEYS.TAB||(this._options.focusTrap||this._options.collapseOnFocusOut)&&this.#focusTrapAndCollapse(t)}_mainElClick(t){(t.target.closest('[data-close="true"]')||t.target.dataset.close)&&this.close()}_getFocusableContent(){this._$focusableContent=[...this._$el.querySelectorAll(this.#focusableElements)]}open(){this._options.activeClass?this._$el.classList.add(this._options.selector.slice(1)+this._options.activeClass):this._$el.removeAttribute("hidden"),void 0===this._$focusableContent&&this._initFocusableContent(),window.disableScroll()}close(){this._options.activeClass?this._$el.classList.remove(this._options.selector.slice(1)+this._options.activeClass):this._$el.setAttribute("hidden",""),this.destroy()}destroy(){this._$el.removeEventListener("click",t=>this._mainElClick(t)),this._$el.removeEventListener("keydown",t=>this._checkPress(t),!0),window.enableScroll()}}function a(){return"ontouchstart"in window||0<navigator.maxTouchPoints||0<navigator.msMaxTouchPoints}function e(t){t.preventDefault()}let i=!1;try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function(){i=!0}}))}catch(t){}const s=!!i&&{passive:!1},o="onwheel"in document.createElement("div")?"wheel":"mousewheel";window.disableScroll=()=>{window.addEventListener("DOMMouseScroll",e,!1),window.addEventListener(o,e,s),window.addEventListener("touchmove",e,s)},window.enableScroll=()=>{window.removeEventListener("DOMMouseScroll",e,!1),window.removeEventListener(o,e,s),window.removeEventListener("touchmove",e,s)};m=new class extends t{#defaultOptions={dialogFullScreen:!0,contentClass:"content",overlay:!0,ovarlayClass:"overlay",overlayBg:"rgba(0,0,0, 0.5)"};#$activeOpenBtn;constructor(t){super(t),this.#check()&&(this._options=Object.assign(this.#defaultOptions,this._options),this._$openBtns=document.querySelectorAll(this._options.openBtnsSelector),this.#init())}#check(){return!this._hasErrors}#init(){"DIALOG"!==this._$el.nodeName&&(this._$el.setAttribute("role","dialog"),this._$el.setAttribute("aria-modal","true"),this._$el.setAttribute("aria-hidden","true"));const t=document.createElement("div");if(t.classList.add(this._options.selector.slice(1)+"__"+this._options.contentClass),t.innerHTML=this._$el.innerHTML,this._$el.innerHTML="",this._$el.appendChild(t),this._options.overlay&&"DIALOG"!==this._$el.nodeName){const e=document.createElement("div");e.style.backgroundColor=this._options.overlayBg,e.style.position="fixed",e.style.inset="0",e.classList.add(this._options.selector.slice(1)+"__"+this._options.ovarlayClass),e.addEventListener("click",this.close.bind(this)),"static"===this._$el.querySelector(":first-child").style.position&&(this._$el.querySelector(":first-child").style.position="relative"),this._$el.insertBefore(e,this._$el.firstChild)}this._$openBtns&&this._$openBtns.forEach(t=>{t.setAttribute("aria-haspopup","dialog"),t.addEventListener("click",this.open.bind(this))})}_mainElClick(t){super._mainElClick(t),"DIALOG"===t.target.nodeName&&this.close()}open(){setTimeout(()=>{"false"===this._$el.getAttribute("aria-hidden")||this._$el.hasAttribute("open")?this.close():(this.#$activeOpenBtn=document.activeElement,"DIALOG"===this._$el.nodeName?this._options.dialogFullScreen?this._$el.showModal():this._$el.show():(super.open(),this._$el.setAttribute("aria-hidden","false")),0<this._$focusableContent.length&&this._$focusableContent[0].focus())},1)}close(){this._$el.setAttribute("closing","");const t="DIALOG"===this._$el.nodeName?this._$el:this._$el.querySelector(`.${this._options.selector.slice(1)}__`+this._options.contentClass);0===t.getAnimations().length?(console.error("Необходимо добавить анимацию для",t),this.#closing()):t.addEventListener("animationend",()=>{this.#closing()},{once:!0}),setTimeout(()=>{-1!==this.#$activeOpenBtn.tabIndex&&this.#$activeOpenBtn.focus(),"function"==typeof this._options.onClose&&this._options.onClose()},1)}#closing(){this._$el.removeAttribute("closing"),"DIALOG"===this._$el.nodeName?(this._$el.close(),super.destroy()):(this._$el.setAttribute("aria-hidden","true"),super.close())}}({selector:"#modal",openBtnsSelector:['[data-name="modal"]'],focusTrap:!0,collapseOnFocusOut:!1}),g=new class extends t{#defaultOptions={description:!0,imgsList:!0};#activeImgNum;#elPadding;#ANIMTAION_TIME=300;#tapedTwice=!1;constructor(t){super(t),this.#check()&&(this._options=Object.assign(this.#defaultOptions,this._options),this._$originalImgs=[...this._$el.querySelectorAll("img")],this.#init())}#check(){return!this._hasErrors}#init(){this._$originalImgs.map((t,e)=>{t.style.cursor="zoom-in",t.setAttribute("data-id",e)})}#initOnOpen(){this.#createGallery(),this.#elPadding=parseInt(getComputedStyle(this._$el).getPropertyValue("padding-left")),this._$galleryMainImg=this._$el.querySelector(".gallery-dk__img"),this._$imgPreviewList=[...this._$el.querySelectorAll("[data-id]")],super._getFocusableContent(),this._onTouchStart=this._onTouchStart.bind(this),this._onTouchEnd=this._onTouchEnd.bind(this),this._onTouchMove=this._onTouchMove.bind(this),this.#initTouchListners()}#initTouchListners(){this._$galleryMainImg.addEventListener("touchstart",this._onTouchStart),this._$galleryMainImg.addEventListener("touchend",this._onTouchEnd),this._$galleryMainImg.addEventListener("touchmove",this._onTouchMove)}#destroyTouchListners(){this._$galleryMainImg.removeEventListener("touchstart",this._onTouchStart),this._$galleryMainImg.removeEventListener("touchend",this._onTouchEnd),this._$galleryMainImg.removeEventListener("touchmove",this._onTouchMove)}#createGallery(){const t=document.createElement("div");t.classList.add("gallery-dk"),this._options.imgsList||t.classList.add("gallery-dk--no-list"),t.setAttribute("hidden",""),t.setAttribute("aria-live","polite"),t.innerHTML=this.#getTemaplate(),this._$el.insertAdjacentElement("beforeend",t);const s=t.querySelector(".gallery-dk__list");this._$originalImgs.map((t,e)=>{if(this._options.imgsList){const i=t.cloneNode(!0);i.removeAttribute("class"),i.removeAttribute("style"),i.setAttribute("data-id",e),i.setAttribute("aria-selected","false"),i.tabIndex=0,s.appendChild(i)}}),this._$el=t}#getTemaplate(){return`<div class="gallery-dk__btns-wrapper">
                  <button class="gallery-dk__to-left" data-prev="true" aria-label="предыдущее изображение"></button>
                  <button class="gallery-dk__to-right" data-next="true"  aria-label="следующее изображение"></button>
                  <button class="gallery-dk__zoom" data-zoom="true" aria-label="увеличить изображение">

                    <?xml version="1.0" ?><svg class="gallery-dk__zoom-svg" data-zoom="true" enable-background="new 0 0 32 32" id="Editable-line" version="1.1" viewBox="0 0 32 32" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><circle cx="14" cy="14" fill="none" id="XMLID_94_" r="9"  stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2"/><line fill="none" id="XMLID_93_"  stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" x1="27" x2="20.366" y1="27" y2="20.366"/><line fill="none" id="XMLID_96_"  stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" x1="14" x2="14" y1="10" y2="18"/><line fill="none" id="XMLID_97_"  stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" x1="10" x2="18" y1="14" y2="14"/></svg>

                  </button>
                  <button class="gallery-dk__close" data-close="true" data-select-last="true" aria-label="закрыть галерею"></button>
               </div>
               <div class="gallery-dk__img-wrapper">
                  <div class="gallery-dk__img" aria-labelledby="gallery-dk-description" role="img"></div>
                  <span id="gallery-dk-description" class="gallery-dk__info scroll--v ${this._options.description?"":"clipped"}"></span>
                  
               </div>
               `+(this._options.imgsList?'<ul class="gallery-dk__list" role="list"></ul>':"")}destroy(){this.#destroyTouchListners(),this._$el.remove(),setTimeout(()=>{this._$el=document.querySelector(this._options.selector)},1)}_checkPress(t){t.keyCode===this._KEYS.ESC&&this._$galleryMainImg.classList.contains("gallery-dk__img--zoom")?this._stopZoom():(super._checkPress(t),t.keyCode===this._KEYS.ENTER&&t.target.dataset.id&&this.setImg(t.target.dataset.id),t.keyCode!==this._KEYS.ARROW_RIGHT&&t.keyCode!==this._KEYS.ARROW_DOWN||(t.preventDefault(),this.nextImg()),t.keyCode!==this._KEYS.ARROW_LEFT&&t.keyCode!==this._KEYS.ARROW_UP||(t.preventDefault(),this.prevImg()))}_mainElClick(t){var e;super._mainElClick(t),t.target.dataset.id?(e=t.target.dataset.id,this._$el.classList.contains("gallery-dk--active")||this.open(),this.setImg(e),this._$galleryMainImg.style.opacity=0):t.target.closest('[data-next="true"]')||t.target.dataset.next?this.nextImg():t.target.closest('[data-prev="true"]')||t.target.dataset.prev?this.prevImg():(t.target.closest('[data-zoom="true"]')||t.target.dataset.zoom)&&this._zoomImg()}open(){super.open(),this.#initOnOpen(),this._$el.classList.add("gallery-dk--active"),0<this._$focusableContent.length&&this._$focusableContent[0].focus()}close(){super.close(),this._$el.classList.remove("gallery-dk--active"),this.destroy()}setImg(t){this.#activeImgNum=t,this._$galleryMainImg.classList.add("gallery-dk__img--change"),this._$galleryMainImg.style.backgroundImage=`url('${this._getImgSrc(t)}')`,this._getImgBackgroundSize().then(t=>{var e=this._$galleryMainImg.parentNode.getBoundingClientRect();t.w<e.width&&t.h<e.height?this._$galleryMainImg.style.backgroundSize="auto":this._$galleryMainImg.style.backgroundSize="contain"}),this._options.imgsList&&(this._$imgPreviewList.map(t=>{t.setAttribute("aria-selected","false")}),this._$imgPreviewList[t].setAttribute("aria-selected","true"),this._$imgPreviewList[t].focus()),this._$galleryMainImg.parentNode.querySelector(".gallery-dk__info").innerHTML=this._$originalImgs[t].getAttribute("alt")?this._$originalImgs[t].getAttribute("alt"):"",setTimeout(()=>{this._setMainImgStylePos("left","0"),this._$galleryMainImg.style.opacity=1,this._$galleryMainImg.classList.remove("gallery-dk__img--change")},1)}_getImgSrc(t){let e=this._$originalImgs[t];t=e.querySelector("img");e=t||e;t=e.dataset.gallery;if(void 0!==t){const i=new Image;if(i.src=t,0<i.width)return t}return e.src}nextImg(){this._setMainImgStylePos("left",-1*window.innerWidth),this.#activeImgNum=this.#activeImgNum++==this._$originalImgs.length-1?0:this.#activeImgNum,setTimeout(()=>{this._setMainImgStylePos("left",window.innerWidth),this.setImg(this.#activeImgNum)},this.#ANIMTAION_TIME)}prevImg(){this._setMainImgStylePos("left",window.innerWidth),this.#activeImgNum=0==this.#activeImgNum--?this._$originalImgs.length-1:this.#activeImgNum,setTimeout(()=>{this._setMainImgStylePos("left",-1*window.innerWidth),this.setImg(this.#activeImgNum)},this.#ANIMTAION_TIME)}_zoomImg(t){let o=1.2;this._isZooming=!0,this._$galleryMainImg.classList.add("gallery-dk__img--zoom"),this._$galleryMainImg.parentElement.classList.add("gallery-dk__img-wrapper--zoom"),this._$galleryMainImg.style.backgroundSize="cover";const n=this._$galleryMainImg.parentElement.clientWidth-2*this.#elPadding,l=this._$galleryMainImg.parentElement.clientHeight-2*this.#elPadding;this._getImgBackgroundSize().then(e=>{let i=e.w,s=e.h;if(e.w>n*o||e.h>l*o){let t;s=e.w>e.h?(t=n/e.w,i=n,e.h*t):(t=l/e.h,i=e.w*t,l)}this._$galleryMainImg.style.backgroundSize=`${i*o}px ${s*o}px`,a()?(o=2,this._$galleryMainImg.style.backgroundSize="cover",this._$galleryMainImg.style.width=i*o+"px",this._$galleryMainImg.style.height=s*o+"px"):this._startZoom()})}_startZoom(){this._mouseMoveMainImg=this._mouseMoveMainImg.bind(this),this._$galleryMainImg.addEventListener("mousemove",this._mouseMoveMainImg,!1),this._stopZoom=this._stopZoom.bind(this),this._$galleryMainImg.addEventListener("click",this._stopZoom,!1)}_stopZoom(){this._isZooming=!1,a()&&(this.#initTouchListners(),this._$galleryMainImg.style.width="",this._$galleryMainImg.style.height="",this._$galleryMainImg.classList.remove("gallery-dk__img--touch"),document.body.style.zoom="100%"),this._$galleryMainImg.style.backgroundPosition="",this._$galleryMainImg.classList.remove("gallery-dk__img--zoom"),this._$galleryMainImg.parentElement.classList.remove("gallery-dk__img-wrapper--zoom"),this._$galleryMainImg.removeEventListener("mousemove",this._mouseMoveMainImg,!1),this._$galleryMainImg.removeEventListener("click",this._stopZoom,!1),this._$imgPreviewList[this.#activeImgNum].focus(),this.setImg(this.#activeImgNum)}_mouseMoveMainImg(t){var e=this._$galleryMainImg.parentElement.getBoundingClientRect(),i=+this._$galleryMainImg.style.backgroundSize.split("px")[0]>e.width?t.offsetX/(e.width-2*this.#elPadding)*100+"%":"center",e=+this._$galleryMainImg.style.backgroundSize.split("px")[1]>e.height?t.offsetY/(e.height-2*this.#elPadding)*100+"%":"center";this._$galleryMainImg.style.backgroundPosition=i+" "+e}_getImgBackgroundSize(){var t=this._$galleryMainImg.style.backgroundImage.replace(/url\((['"])?(.*?)\1\)/gi,"$2").split(",")[0];const s=new Image;return s.src=t,new Promise(function(i,t){s.onload=function(){var t=s.width,e=s.height;i({w:t,h:e})}})}_onTouchStart(t){1===t.touches.length&&this._tapTwiceDetection.bind(this)(t)?this._isZooming?this._stopZoom():this._zoomImg(t):this._startDrag(t)}_onTouchEnd(t){this._scaling?this._stopScale(t):this._direction&&this._stopDrag(t)}_onTouchMove(t){this._scaling?this._onScaling(t):this._dragging(t)}_startDrag(t){this._direction=!1,this._clickX=t.pageX,this._clickY=t.pageY,this._$galleryMainImg.classList.add("gallery-dk__img--on-drag")}_stopDrag(t){var e=this._$galleryMainImg.getBoundingClientRect(),i=.5*e.height;this._$galleryMainImg.classList.remove("gallery-dk__img--on-drag"),"left"===this._direction?e.x<-70?this.nextImg():70<e.x?this.prevImg():this._setMainImgStylePos("left","0"):"top"===this._direction&&(e.y>i||e.y<-i)&&this.close(),this._setMainImgStylePos("top","0"),this._$el.style.opacity=1,this._direction=!1}_dragging(t){var e;this._isZooming||(e=t.pageX,t=t.pageY,e=e-this._clickX,t=t-this._clickY,!this._direction&&20<Math.abs(e)+Math.abs(t)?Math.abs(e)>Math.abs(t)?this._direction="left":this._direction="top":"left"===this._direction?this._setMainImgStylePos("left",e):"top"===this._direction&&(this._setMainImgStylePos("top",t),this._makeGalleryTransparent()))}_setMainImgStylePos(t,e){this._$galleryMainImg.style.setProperty(t,e+"px")}_makeGalleryTransparent(){var t=this._$galleryMainImg.getBoundingClientRect(),e=.7*t.height;this._$el.style.opacity=1-Math.abs(t.y)/e}_tapTwiceDetection(t){return this.#tapedTwice?(t.preventDefault(),!0):(this.#tapedTwice=!0,setTimeout(()=>{this.#tapedTwice=!1},300),!1)}}({selector:".gallery",focusTrap:!0,collapseOnFocusOut:!1})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
